<script>
    $( document ).ready(function() {

        /*************************************************************************************
         * Reinventando la rueda con el loader.. Lo siento, no había otra forma :( x2
         */
        var loader2 = document.createElement('div');
        loader2.className = 'loader';
        loader2.innerHTML = string([
            '<div class="content">',
            '<img src="'+ rootImg +'images/body/etiquetas/loading.gif">',
            '<p>Procesando... Espera unos segundos, por favor.</p>',
            '</div>'
        ]);
        document.body.appendChild(loader2);
        function modalLoad() { loader2.style.display = 'flex'; }
        function modalLoaded() { loader2.style.display = 'none'; }

        $('.btn-continue').click(function (e) {
            var error = validarInput('#portabilidad-numero', '') || validarInput('#portabilidad-operadora', '');

            if (!error){
                if (!$('.btn-flat').hasClass('active')){
                    $('.container-btn-flat').addClass('has-error')
                }else{
                    $('.container-btn-flat').removeClass('has-error');
                    $('.container-btn-flat').addClass('has-success');
                    error =  validarInput('#portabilidad-nombres', '') || validarInput('#portabilidad-apellidos', '') ||
                        validarInput('#portabilidad-cedula', '') || validarInput('#portabilidad-email', '') ||
                        validarInput('#input-foto-anverso', '') || validarInput('#input-foto-reverso', '');

                    if (!error){

                        if (signaturePad.isEmpty()) {
                            modalAlert("Debes realizar una firma antes de continuar");
                        }else{
                            var dataURL = signaturePad.toDataURL();
                            $('#signature-result').attr('src', dataURL);
                            $('#signature-pad div').css('background', '#D5D5D5');
                            $('input[name="portabilidad-firma"]').val(dataURL);
                            canvas.style.display = 'none';
                            $('a[data-action=signature-clear]').addClass('active');
                            var form = document.getElementById('create-portabilidad-form');
                            var aData = new FormData(form);
                            try {
                                $.ajax({
                                    url: "{{ path('TiendaClaro_portabilidad_storeLanding') }}",
                                    type: 'POST',
                                    data: aData,
                                    enctype: 'multipart/form-data',
                                    cache: false,
                                    processData: false,  // tell jQuery not to process the data
                                    contentType: false,   // tell jQuery not to set contentType
                                    //mimeType:"multipart/form-data",
                                    beforeSend: function () {
                                        modalLoad();
                                    },
                                    success: function (data) {
                                        modalLoaded();
                                        if (data.error){
                                            modalAlert('Se ha presentado un pequeño inconveniente.. Por favor, inténtalo de nuevo','ERROR');
                                        }else{
                                            $('#create-portabilidad-form').hide();
                                            $('#content-final').show();
                                            $("html, body").animate({ scrollTop: 0 }, "fast");
                                        }
                                    },
                                    error: function(err) {
                                        //console.error(err);
                                        modalAlert('Los datos ingresados son incorrectos.', 'ERROR');
                                    },
                                    complete: function(data) {
                                        modalLoaded();
                                    },
                                });
                            }
                            catch(err) {
                                modalLoaded();
                                modalAlert('Se ha presentado un pequeño inconveniente.. Por favor, inténtalo de nuevo','ERROR');
                                $('button[data-backtohome]').click();
                            }

                        }

                    }

                }
            }

        });

        $('.btn-flat').click(function (e) {
            $('.btn-flat').removeClass('active');
            $(e.currentTarget).addClass('active');
            $('input[name="portabilidad-servicio-actual"]').val($(this).attr('data-target'));
        });

        /*************************************************************************************
         * Validación de inputs según el tipeo del usuario
         */
        $('input[type="text"], input[type="email"]').keyup(function (e) {
            var error = false;
            switch ($(this).attr('data-validate')) {
                case "alpha": //Just letters
                    var patternText = new RegExp(/^[a-zA-ZñÑáéíóúÁÉÍÓÚüÜ ]*$/);//new RegExp(/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/);
                    error = !patternText.test($(this).val());
                    break;
                case "numeric": //Just numbers
                    var patternText = new RegExp(/^[0-9]*$/);
                    error = !patternText.test($(this).val());
                    break;
                case "alphanumeric": // Letters and numbers
                    var patternText = new RegExp(/^[a-zA-Z0-ñÑáéíóúÁÉÍÓÚüÜ]*$/);
                    error = !patternText.test($(this).val());
                    break;
                case "email": // Just Email
                    var patternText = new RegExp(/[$&+,:;=¿?#|'<>^*()%¡!¬{}\[\]\\/`´]/);
                    error = patternText.test($(this).val());
                    break;
                case "all": // Letters, numbers and printable
                default: //Etc.
                    break;
            }
            if(error) {
                $(this).parent().addClass('has-error');
            } else
                $(this).parent().removeClass('has-error');
        });

        /**
         * Retorna true si hay error
         * @param scope
         * @param id_form_step__actual
         * @returns {boolean}
         */
        function validarInput(scope, id_form_step__actual) {
            var input = $(scope);
            var error = false;
            var el_msj = $(id_form_step__actual + ' .form-control-msj[data-target="' + input.attr('id') + '"]');
            //console.log(input.attr('id') + ": <" + input.val() + ">");
            //Verifico que los campos no estén vacíos
            if(typeof input.attr('data-type') !== typeof undefined && input.attr('data-type') !== false) { //Solo si existe el atributo del tipo
                if(input.val() === null || input.val().trim() == '') {
                    input.parent().addClass('has-error').removeClass('has-success');
                    el_msj.html(el_msj.attr('data-error'));
                    error = true;
                } else {
                    //Revisar tipo de dato
                    if(validateByType(input.attr('data-type'), input.val())) {
                        input.parent().addClass('has-success').removeClass('has-error');
                        el_msj.empty();
                    } else {
                        input.parent().addClass('has-error').removeClass('has-success');
                        el_msj.html('La información ingresada es inválida');
                        error = true;
                    }
                }
            }
            return error;
        }

        /*************************************************************************************
         * Funcionalidad del paso 4 (Selección de imágenes)
         */
        $('.input-file button.btn-choose').click(function(e){
            $(this).parent().parent().find('input[type="file"]').click();
        });
        $('input[type="file"]').change(function(e){
            var el_parent = $(this).parent().parent();
            var el_p_msj = $(this).parent().parent().find('p.form-control-msj');
            function notificarChange(isError, msgError) {
                if(isError) {
                    el_parent.addClass('has-error').removeClass('has-success');
                    el_p_msj.html(msgError);
                } else {
                    el_parent.removeClass('has-error').addClass('has-success');
                }
            }

            var file = event.target.files[0];
            $(this).parent().parent().find('p.form-control-msj').empty();
            $(this).parent().find('input[type="text"]').val(file.name);
            if (file.size >= 4 * 1024 * 1024) {
                notificarChange(true, 'El peso del archivo excede lo máximo permitido (4MB).');
            } else {
                if (window.FileReader && window.Blob) { //Solo lo valido si lo permite el navegador
                    var fileReader = new FileReader();
                    fileReader.onloadend = function(e) {
                        var arr = (new Uint8Array(e.target.result)).subarray(0, 4);
                        var header = "";
                        for (var i = 0; i < arr.length; i++) {
                            header += arr[i].toString(16);
                        }
                        var mimeType = "unknown";
                        switch (header) {
                            case "89504e47":
                                mimeType = "image/png";
                                break;
                            case "47494638":
                                mimeType = "image/gif";
                                break;
                            case "ffd8ffe0":
                            case "ffd8ffe1":
                            case "ffd8ffe2":
                                mimeType = "image/jpeg";
                                break;
                            default:
                                mimeType = "unknown";
                                break;
                        }
                        notificarChange(mimeType === "unknown", 'El archivo debe ser una imagen tipo: PNG, JPG o GIF.');
                    };
                    fileReader.readAsArrayBuffer(file);
                }
            }

        });

        /*************************************************************************************
         * Funcionalidad del paso 4 (Firma)
         */
        var signature_wrapper = document.getElementById("signature-pad");
        var canvas = signature_wrapper.querySelector("canvas");
        var signaturePad = new SignaturePad(canvas, {
            // It's Necessary to use an opaque color when saving image as JPEG;
            // this option can be omitted if only saving as PNG or SVG
            backgroundColor: 'rgb(255, 255, 255)',
            penColor: "rgb(0, 0, 0)"
        });

        // Adjust canvas coordinate space taking into account pixel ratio,
        // to make it look crisp on mobile devices.
        // This also causes canvas to be cleared.
        function resizeCanvas() {
            // When zoomed out to less than 100%, for some very strange reason,
            // some browsers report devicePixelRatio as less than 1
            // and only part of the canvas is cleared then.
            var ratio =  Math.max(window.devicePixelRatio || 1, 1);

            // This part causes the canvas to be cleared
            canvas.width = canvas.offsetWidth * ratio;
            canvas.height = canvas.offsetHeight * ratio;
            canvas.getContext("2d").scale(ratio, ratio);

            // This library does not listen for canvas changes, so after the canvas is automatically
            // cleared by the browser, SignaturePad#isEmpty might still return false, even though the
            // canvas looks empty, because the internal data of this library wasn't cleared. To make sure
            // that the state of this library is consistent with visual state of the canvas, you
            // have to clear it manually.
            signaturePad.clear();
        }

        // On mobile devices it might make more sense to listen to orientation change,
        // rather than window resize events.
        window.onresize = resizeCanvas;
        resizeCanvas();

        $('a[data-action=signature-clear]').click(function (e) {
            e.preventDefault();
            var el_signature_img = $('#signature-result');
            if(el_signature_img.attr('src') !== '') {
                el_signature_img.attr('src', '');
                canvas.style.display = '';
                $('a[data-action=signature-save]').show();
                $('#signature-pad div').css('background', '');
            }
            $(this).removeClass('active');
            signaturePad.clear();
        });

        $('a[data-action=signature-save]').click(function (e) {
            e.preventDefault();
            if (signaturePad.isEmpty()) {
                modalAlert("Primero realiza una firma antes de confirmarla.");
            } else {
                var dataURL = signaturePad.toDataURL();
                $('#signature-result').attr('src', dataURL);
                $('#signature-pad div').css('background', '#D5D5D5');
                $('input[name="portabilidad-firma"]').val(dataURL);
                canvas.style.display = 'none';
                $(this).hide();
                $('a[data-action=signature-clear]').addClass('active');
            }
        });

    });
</script>